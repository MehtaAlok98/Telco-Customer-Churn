name: Data Pipeline and Deployment

on:
  push:
    branches: [main]

jobs:
  data-pipeline-and-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs
          git lfs install

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip  # Upgrade pip before installing requirements
          pip install --upgrade -r requirements.txt

      - name: Clean Data
        run: python scripts/data_cleaning.py

      - name: Configure Git
        run: |
          git config --global user.email "alokmehta1432@gmail.com"
          git config --global user.name "Alok Kumar"

      - name: Recreate build branch
        run: |
          git fetch origin
          git branch -D build || echo "No existing 'build' branch to delete."
          git checkout -b build
          git push -u origin build  # Create a new build branch on origin

      - name: Pull latest changes from build
        run: |
          git pull origin build --rebase  # Pull the latest changes to avoid non-fast-forward errors

      - name: Commit Cleaned Data
        run: |
          git add data/cleaned_data.csv
          git commit -m "Update cleaned data" || echo "No changes to commit"
          git push -f origin build

      - name: Train Model
        run: python scripts/train_model.py
      
      - name: Commit Model
        run: |
          git add scripts/churn_model.pkl
          git commit -m "Update trained model" || echo "No changes to commit"
          git push -f origin build

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel --prod --token $VERCEL_TOKEN --yes --name telco-churn-model
